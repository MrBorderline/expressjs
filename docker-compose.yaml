version: "3"
services:
# MICROSERVICIO USERS
  js:
    build:
      context: ./
      dockerfile: Dockerfile_users
    container_name: "node_user"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_USER: usuario
      MONGO_PASSWORD: usuario
      MONGO_DATABASE: js
    restart: unless-stopped
    ports:
      - 8080:3000
    # volumes:
    #   - ./:/app
    command: pm2-runtime index.js

  front:
    build:
      context: ./
      dockerfile: Dockerfile_front
    container_name: "node_front"
    environment:
      NODE_ENV: development
      USERSRV: js
      PORT: 3000
    restart: unless-stopped
    ports:
      - 3000:3000
    command: pm2-runtime app.js

  mongodb:
    container_name: mongo
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin 
      - MONGO_INITDB_ROOT_PASSWORD=admin 
      - MONGO_INITDB_DATABASE=js
    ports:
      - 27017:27017
    volumes:
      - .db:/data/db
      - ./configs/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo-express:
    image: mongo-express
    container_name: mexpress
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    restart: unless-stopped
    ports:
      - "8081:8081"


  # mongo-ha:
  #   image: haproxy:latest
  #   container_name: "mongo-ha"
  #   restart: unless-stopped
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - ./configs/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg